openapi: 3.0.0
info:
  license:
    name: MIT
  title: Fledge REST API
  version: 1.0.0
servers:
- url: /
paths:
  /designs/{user}:
    get:
      operationId: listDesigns
      parameters:
      - description: user name
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: How many items to return at one time (max 100)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Designs'
          description: A paged array of designs
          headers:
            x-next:
              description: A link to the next page of responses
              explode: false
              schema:
                type: string
              style: simple
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: List designs owned by user
      tags:
      - designs
    post:
      operationId: createDesigns
      parameters:
      - description: user name
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: the name of design
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          description: Null response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Create a design
      tags:
      - designs
  /designs/{user}/{design}/schema:
    get:
      operationId: getDesignSchema
      parameters:
      - description: user name
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: name of design
        explode: false
        in: path
        name: design
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignSchema'
          description: a design schema
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Get a design schema owned by user
      tags:
      - designSchema
    put:
      operationId: updateDesignSchema
      parameters:
      - description: user name
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: name of design
        explode: false
        in: path
        name: design
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignSchema'
      responses:
        "201":
          description: Null response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Update a design schema
      tags:
      - designSchema
  /designs/{user}/{design}/code:
    get:
      operationId: getDesignCode
      parameters:
      - description: user name
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: name of design
        explode: false
        in: path
        name: design
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-steam:
              schema:
                format: binary
                type: string
          description: a design code file in zipped format
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Get a zipped design code file owned by user
      tags:
      - designCode
    post:
      operationId: updateDesignCode
      parameters:
      - description: user name
        explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: name of design
        explode: false
        in: path
        name: design
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-steam:
            schema:
              format: binary
              type: string
      responses:
        "201":
          description: Null response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Update a design doce
      tags:
      - designCode
components:
  schemas:
    Design:
      example:
        name: diabete_predict
        id: 1
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - id
      - name
    Designs:
      items:
        $ref: '#/components/schemas/Design'
      type: array
    DesignSchema:
      example:
        backend: p2p
        channels:
        - role1: aggregator
          role2: trainer
          name: param_channel
          groupby:
          - us_west
          - uk
        - role1: global_aggregator
          role2: aggregator
          name: agg_channel
          groupby: []
        roles:
        - name: aggregator
          replica: 1
        - name: global_aggregator
          replica: 1
        - name: trainer
          replica: 1
      properties:
        backend:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        channels:
          items:
            $ref: '#/components/schemas/Channel'
          type: array
      required:
      - backend
      - channels
      - roles
    Channel:
      example:
        role1: aggregator
        role2: trainer
        name: param_channel
        groupby:
        - us_west
        - uk
      properties:
        name:
          type: string
        role1:
          type: string
        role2:
          type: string
        groupby:
          items:
            type: string
          type: array
      required:
      - name
      - role1
      - role2
    Role:
      example:
        name: aggregator
        replica: 1
      properties:
        name:
          type: string
        replica:
          format: int32
          type: integer
      required:
      - name
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
