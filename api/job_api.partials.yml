/{user}/job/{jobId}:
  #------------------------------------#
  # Get Job by jobId
  #------------------------------------#
  get:
    operationId: getJob
    summary: Get job detail.
    tags:
      - job
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    responses:
      "200":
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobInfo'
        description: Information about submitted job
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

  #------------------------------------#
  # Update Job
  #------------------------------------#
  put:
    operationId: updateJob
    summary: Update job by id.
    tags:
      - job
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobInfo'
    responses:
      '200':
        description: Updated
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

  #------------------------------------#
  # Delete Job
  #------------------------------------#
  delete:
    operationId: deleteJob
    summary: Delete job by id.
    tags:
      - job
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    responses:
      '200':
        description: Deleted
      '404':
        description: id not found
      '401':
        description: Unauthorized
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

/{user}/job:
  #------------------------------------#
  # Submit New Job
  #------------------------------------#
  post:
    operationId: submitJob
    summary: Submit a new job.
    tags:
      - job
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobInfo'
    responses:
      "201":
        description: Null response
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

/{user}/job/{jobId}/schema/{schemaId}/design/{designId}:
  #------------------------------------#
  # Change Job Schema
  #------------------------------------#
  post:
    operationId: changeJobSchema
    summary: Change the schema for the given job
    tags:
      - job
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: schemaId
        description: schema id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: designId
        description: design id
        in: path
        schema:
          type: string
        style: simple
        explode: true
        required: true
    responses:
      "201":
        description: Null response
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error


/{user}/jobs:
  #------------------------------------#
  # Get Jobs by user or designId
  #------------------------------------#
  get:
    operationId: getJobs
    summary: Get list of all the jobs by the user or based on designId.
    tags:
      - jobs
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: designId
        description: design id
        in: query
        schema:
          type: string
        style: form
        explode: true
        required: false
      - name: getType
        description: Type of fetch based on id or all
        in: query
        schema:
          type: string
          enum: ["all", "design"]
        style: form
        explode: true
        required: false
      - name: limit
        description: How many items to return at one time (max 100)
        in: query
        schema:
          format: int32
          type: integer
        style: form
        explode: true
        required: false
    responses:
      "200":
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JobInfo'
        description: A paged array of jobs
        headers:
          x-next:
            description: A link to the next page of responses
            explode: false
            schema:
              type: string
            style: simple
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error


/{user}/job/{jobId}/agent/{agentId}:
  #------------------------------------#
  # Update Status
  #------------------------------------#
  put:
    operationId: updateAgentStatus
    summary: Update agent status for job id.
    tags:
      - agent
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: agentId
        description: agent id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentStatus'
    responses:
      '200':
        description: Updated
      '404':
        description: id not found
      '401':
        description: Unauthorized
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error
