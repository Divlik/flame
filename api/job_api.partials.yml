/{user}/jobs:
  ########################################
  # Create new job
  ########################################
  post:
    operationId: createJob
    summary: Create a new job specification
    tags:
      - jobs
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobSpec'
    responses:
      "201":
        description: Null response
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

/{user}/jobs/status:
  ########################################
  # Get status of jobs
  ########################################
  get:
    operationId: getJobsStatus
    summary: Get status info on all the jobs owned by user
    tags:
      - jobs
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: limit
        description: How many items to return at one time (max 100)
        in: query
        schema:
          format: int32
          type: integer
        style: form
        explode: true
        required: false
    responses:
      "200":
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JobStatus'
        description: A paged array of status on jobs
        headers:
          x-next:
            description: A link to the next page of responses
            explode: false
            schema:
              type: string
            style: simple
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

/{user}/jobs/{jobId}:
  ########################################
  # Get job specification given an ID
  ########################################
  get:
    operationId: getJob
    summary: Get a job specification
    tags:
      - jobs
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    responses:
      "200":
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobSpec'
        description: Information about submitted job
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

  ########################################
  # Update job specification
  ########################################
  put:
    operationId: updateJob
    summary: Update a job specification
    tags:
      - jobs
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobSpec'
    responses:
      '200':
        description: Updated
      '401':
        description: Unauthorized
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

  ########################################
  # Delete Job
  ########################################
  delete:
    operationId: deleteJob
    summary: Delete job specification
    tags:
      - jobs
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    responses:
      '200':
        description: Deleted
      '404':
        description: Job id not found
      '401':
        description: Unauthorized
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error


/{user}/jobs/{jobId}/status:
  ########################################
  # Get job status
  ########################################
  get:
    operationId: getJobStatus
    summary: Get job status of a given jobId
    tags:
      - jobs
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    responses:
      "200":
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobStatus'
        description: Information about submitted job
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

  ########################################
  # Update job status to start/stop/apply a job
  ########################################
  put:
    operationId: updateJobStatus
    summary: Update a job's status
    tags:
      - jobs
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobStatus'
    responses:
      '200':
        description: Updated status
      '401':
        description: Unauthorized
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

# TODO: revise below
/{user}/jobs/{jobId}/schema/{schemaId}/design/{designId}:
  #------------------------------------#
  # Change Job Schema
  #------------------------------------#
  post:
    operationId: changeJobSchema
    summary: Change the schema for the given job
    tags:
      - jobs
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: schemaId
        description: schema id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: designId
        description: design id
        in: path
        schema:
          type: string
        style: simple
        explode: true
        required: true
    responses:
      "201":
        description: Null response
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error

/{user}/jobs/{jobId}/agent/{agentId}:
  #------------------------------------#
  # Update Status
  #------------------------------------#
  put:
    operationId: updateAgentStatus
    summary: Update agent status for job id.
    tags:
      - agent
    parameters:
      - name: user
        description: user id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: jobId
        description: job id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
      - name: agentId
        description: agent id
        in: path
        schema:
          type: string
        style: simple
        explode: false
        required: true
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentStatus'
    responses:
      '200':
        description: Updated
      '404':
        description: id not found
      '401':
        description: Unauthorized
      default:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: unexpected error
