/*
 * Fledge REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"

	"wwwin-github.cisco.com/eti/fledge/cmd/controller/database"
	"wwwin-github.cisco.com/eti/fledge/pkg/objects"
)

// DesignSchemaApiService is a service that implents the logic for the DesignSchemaApiServicer
// This service should implement the business logic for every endpoint for the DesignSchemaApi API.
// Include any external packages or services that will be required by this service.
type DesignSchemaApiService struct {
}

// NewDesignSchemaApiService creates a default api service
func NewDesignSchemaApiService() DesignSchemaApiServicer {
	return &DesignSchemaApiService{}
}

// GetDesignSchema - Get a design schema owned by user
func (s *DesignSchemaApiService) GetDesignSchema(ctx context.Context, user string, designId string, getType string,
	schemaId string) (objects.ImplResponse, error) {
	info, err := database.GetDesignSchema(user, designId, getType, schemaId)
	if err != nil {
		return objects.Response(http.StatusInternalServerError, nil), errors.New("get design schema details request failed")
	}
	return objects.Response(http.StatusOK, info), nil
}

// UpdateDesignSchema - Update a design schema
func (s *DesignSchemaApiService) UpdateDesignSchema(ctx context.Context, user string, designId string,
	designSchema objects.DesignSchema) (objects.ImplResponse, error) {
	if designSchema.ID == "" {
		err := database.CreateDesignSchema(user, designId, designSchema)
		if err != nil {
			return objects.Response(http.StatusInternalServerError, nil), errors.New("insert design schema details request failed")
		}
	} else {
		err := database.UpdateDesignSchema(user, designId, designSchema)
		if err != nil {
			return objects.Response(http.StatusInternalServerError, nil), errors.New("update design schema details request failed")
		}
	}
	return objects.Response(http.StatusOK, nil), nil
}
