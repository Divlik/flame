/*
 * Job REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	_ "encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A JobsApiController binds http requests to an api service and writes the service results to the http response
type JobsApiController struct {
	service JobsApiServicer
}

// NewJobsApiController creates a default api controller
func NewJobsApiController(s JobsApiServicer) Router {
	return &JobsApiController{service: s}
}

// Routes returns all of the api route for the JobsApiController
func (c *JobsApiController) Routes() Routes {
	return Routes{
		{
			"GetJobs",
			strings.ToUpper("Get"),
			"/{user}/jobs/",
			c.GetJobs,
		},
	}
}

// GetJobs - Get list of all the jobs by the user or based on designId.
func (c *JobsApiController) GetJobs(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	query := r.URL.Query()
	user := params["user"]

	designId := query.Get("designId")
	getType := query.Get("getType")
	limit, err := parseInt32Parameter(query.Get("limit"), false)
	if err != nil {
		w.WriteHeader(http.StatusBadRequest)
		return
	}
	result, err := c.service.GetJobs(r.Context(), user, designId, getType, limit)
	// If an error occurred, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
